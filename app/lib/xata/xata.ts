// Generated by Xata Codegen 0.29.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "user",
    columns: [
      { name: "email", type: "email", unique: true },
      { name: "password", type: "string" },
    ],
    revLinks: [{ column: "urlid", table: "url" }],
  },
  {
    name: "url",
    columns: [
      { name: "urlid", type: "link", link: { table: "user" } },
      { name: "url", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type Url = InferredTypes["url"];
export type UrlRecord = Url & XataRecord;

export type DatabaseSchema = {
  user: UserRecord;
  url: UrlRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://rajiWanigasingha-s-workspace-27u08g.eu-west-1.xata.sh/db/urlshorten",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
